// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  return array.reduce((acc, current) => {
    return acc.concat(current);
  }, []);
};
// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, body) {
  while(test(value)) {
    body(value);
    value = update(value);
  }
};


// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {

return !array.some(i => !test(i))

  // for(let i = 0; i < array.length; i++){
  //   if(!test(array[i])){
  //     return false;
  //   }
  // }
  // return true
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(text) {
  let directionCounts = text.split('').map(char => (script = characterScript(char.codePointAt(0))) ? script.direction : "none").reduce((counts, direction) => (counts[direction] = (counts[direction] || 0) + 1, counts), {});
  return Object.keys(directionCounts).reduce((a, b) => directionCounts[a] > directionCounts[b] ? a : b);
}


// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
